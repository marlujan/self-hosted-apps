---
- name: Remove Docker Compose Application
  hosts: docker_apps
  become: yes
  vars:
    app_config_path: "../{{ app_name }}/app.yml"
    app_directory: "/home/ec2-user/apps/{{ app_name }}"

  pre_tasks:
    - name: Validate app_name parameter
      assert:
        that:
          - app_name is defined
          - app_name != ""
        fail_msg: "app_name must be provided. Use: -e app_name=<app_name>"

    - name: Load app configuration
      include_vars:
        file: "{{ app_config_path }}"
        name: app_config
      delegate_to: localhost
      ignore_errors: yes

    - name: Confirm removal
      pause:
        prompt: "‚ö†Ô∏è  This will permanently remove {{ app_name }} and all its data. Type 'yes' to continue"
      register: confirm_removal

    - name: Abort if not confirmed
      fail:
        msg: "Removal aborted"
      when: confirm_removal.user_input != "yes"

    - name: Display removal info
      debug:
        msg:
          - "Removing application: {{ app_name }}"
          - "Domain: {{ app_config.domain_name | default('Unknown') }}"

  tasks:
    - name: Stop and remove Docker Compose services
      community.docker.docker_compose:
        project_src: "{{ app_directory }}"
        state: absent
        remove_volumes: yes
      become_user: ec2-user
      ignore_errors: yes

    - name: Remove application directory
      file:
        path: "{{ app_directory }}"
        state: absent

    - name: Remove Nginx configuration
      file:
        path: "/etc/nginx/sites-enabled/{{ app_name }}.conf"
        state: absent
      notify: reload nginx

    - name: Remove Nginx available configuration
      file:
        path: "/etc/nginx/sites-available/{{ app_name }}.conf"
        state: absent

    - name: Remove SSL certificate
      command: certbot delete --cert-name {{ app_config.domain_name | default(app_name) }} --non-interactive
      register: cert_removal
      failed_when: cert_removal.rc != 0 and "No certificate found" not in cert_removal.stderr
      when: app_config.ssl_enabled | default(true)

  handlers:
    - name: reload nginx
      systemd:
        name: nginx
        state: reloaded

  post_tasks:
    - name: Display removal status
      debug:
        msg: 
          - "‚úÖ {{ app_name }} removal completed!"
          - "üóëÔ∏è All services, volumes, and configurations removed"
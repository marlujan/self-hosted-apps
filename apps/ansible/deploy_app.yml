---
- name: Deploy Docker Compose Application
  hosts: docker_apps
  become: yes
  vars:
    app_config_path: "../{{ app_name }}/app.yml"
    app_compose_path: "../{{ app_name }}/docker-compose.yml"
    app_directory: "/home/ec2-user/apps/{{ app_name }}"

  pre_tasks:
    - name: Validate app_name parameter
      assert:
        that:
          - app_name is defined
          - app_name != ""
        fail_msg: "app_name must be provided. Use: -e app_name=<app_name>"

    - name: Load app configuration
      include_vars:
        file: "{{ app_config_path }}"
        name: app_config
      delegate_to: localhost
      become: no

    - name: Validate Docker Compose file exists
      stat:
        path: "{{ app_compose_path }}"
      delegate_to: localhost
      become: no
      register: compose_stat

    - name: Fail if compose file missing
      fail:
        msg: "docker-compose.yml not found at {{ app_compose_path }}"
      when: not compose_stat.stat.exists

    - name: Display deployment info
      debug:
        msg:
          - "Deploying application: {{ app_config.app_name }}"
          - "Domain: {{ app_config.domain_name }}"
          - "Services: {{ app_config.services.keys() | list | join(', ') }}"

  roles:
    - role: compose_app
      vars:
        app: "{{ app_config }}"
    - role: nginx_proxy
      vars:
        app: "{{ app_config }}"
    - role: ssl_cert
      vars:
        app: "{{ app_config }}"
      when: app_config.ssl_enabled | default(true)

  post_tasks:
    - name: Verify services health
      include_tasks: tasks/health_check.yml
      vars:
        service_name: "{{ item.key }}"
        service_config: "{{ item.value }}"
        app: "{{ app_config }}"
      loop: "{{ app_config.services | dict2items }}"
      when: item.value.proxy_port is defined

    - name: Display deployment status
      debug:
        msg: 
          - "‚úÖ {{ app_config.app_name }} deployment completed successfully!"
          - "üåê Available at: https://{{ app_config.domain_name }}"
          - "üê≥ Services deployed: {{ app_config.services.keys() | list | join(', ') }}"
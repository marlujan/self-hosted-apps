# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.*
!.env.example
!.env.template

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# Sveltekit cache directory
.svelte-kit/

# vitepress build output
**/.vitepress/dist

# vitepress cache directory
**/.vitepress/cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# Firebase cache directory
.firebase/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v3
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions

# Vite logs files
vite.config.js.timestamp-*
vite.config.ts.timestamp-*


#----- For Ansible projects (pending of cleaning):

# ## General Exclusions ##
# Python virtual environments
venv/
.venv/
env/
.env/

# Python cache files
*.pyc
__pycache__/

# IDE and editor directories/files
.vscode/
.idea/
*.swp
*.swo
.vim/

# OS-generated files
.DS_Store
Thumbs.db


# ## Ansible Specific Exclusions ##
# Ansible runtime files
*.retry
*.log
fact_caching/
facts_cache/
.ansible_fact_cache/

# Dynamic inventory cache files
*.cache


# ## Secrets & Credentials ##
# NEVER commit secrets, private keys, vault passwords, or unencrypted credential files.
# Store the vault password in a secure password manager.
*vault*pass*
*.pem
*.key
credentials.yml
secrets.yml
# Consider ignoring encrypted vault files as well, especially in public repositories.
# Un-comment the line below if you want to ignore your vault files.
# *vault*.yml


# ## Dependency Management ##
# Ignore roles and collections installed via ansible-galaxy.
# Your 'requirements.yml' file SHOULD be committed to the repository.
# roles/
# collections/

# If you have custom, project-specific roles inside the 'roles' directory that
# you WANT to commit, you can add exceptions. For example:
# !roles/my_custom_app_role/


# ## Testing & Development Environments ##
# Vagrant-related files
.vagrant/

# Molecule testing framework files
.molecule/


# .bak files
*.bak
